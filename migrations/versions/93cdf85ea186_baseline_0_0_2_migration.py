"""baseline 0.0.2 migration

Revision ID: 93cdf85ea186
Revises: 
Create Date: 2024-08-05 16:46:19.425040

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '93cdf85ea186'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('campaign',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('class',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('spellCastingAbility', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ext_content',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('key', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feat',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('prerequisite', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('proficiency',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('race',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('languages', sa.String(), nullable=True),
    sa.Column('alignment', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('roleName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('savingthrow',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('statName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skill',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spellbook',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('spellslot1', sa.Integer(), nullable=True),
    sa.Column('spellslot2', sa.Integer(), nullable=True),
    sa.Column('spellslot3', sa.Integer(), nullable=True),
    sa.Column('spellslot4', sa.Integer(), nullable=True),
    sa.Column('spellslot5', sa.Integer(), nullable=True),
    sa.Column('spellslot6', sa.Integer(), nullable=True),
    sa.Column('spellslot7', sa.Integer(), nullable=True),
    sa.Column('spellslot8', sa.Integer(), nullable=True),
    sa.Column('spellslot9', sa.Integer(), nullable=True),
    sa.Column('warlockslots', sa.Integer(), nullable=True),
    sa.Column('warlockslotlevel', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spells',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('castingTime', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('duration', sa.String(), nullable=True),
    sa.Column('school', sa.String(), nullable=True),
    sa.Column('range', sa.String(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('verbal', sa.Boolean(), nullable=True),
    sa.Column('somatic', sa.Boolean(), nullable=True),
    sa.Column('material', sa.Boolean(), nullable=True),
    sa.Column('ritual', sa.Boolean(), nullable=True),
    sa.Column('concentration', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subclass',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('fName', sa.String(), nullable=True),
    sa.Column('lName', sa.String(), nullable=True),
    sa.Column('lastOnline', sa.DateTime(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('salt', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('cantripknowledge',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('spellbookId', sa.Integer(), nullable=True),
    sa.Column('spellId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['spellbookId'], ['spellbook.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('class_feats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('classId', sa.Integer(), nullable=True),
    sa.Column('featId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['classId'], ['class.id'], ),
    sa.ForeignKeyConstraint(['featId'], ['feat.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('class_subclasses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('classId', sa.Integer(), nullable=True),
    sa.Column('subclassId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['classId'], ['class.id'], ),
    sa.ForeignKeyConstraint(['subclassId'], ['subclass.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('class_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('classId', sa.Integer(), nullable=True),
    sa.Column('profBonus', sa.String(), nullable=True),
    sa.Column('cantripsKnown', sa.String(), nullable=True),
    sa.Column('spellsKnown', sa.String(), nullable=True),
    sa.Column('hitDice', sa.Integer(), nullable=True),
    sa.Column('level1SpellSlots', sa.String(), nullable=True),
    sa.Column('level2SpellSlots', sa.String(), nullable=True),
    sa.Column('level3SpellSlots', sa.String(), nullable=True),
    sa.Column('level4SpellSlots', sa.String(), nullable=True),
    sa.Column('level5SpellSlots', sa.String(), nullable=True),
    sa.Column('level6SpellSlots', sa.String(), nullable=True),
    sa.Column('level7SpellSlots', sa.String(), nullable=True),
    sa.Column('level8SpellSlots', sa.String(), nullable=True),
    sa.Column('level9SpellSlots', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['classId'], ['class.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('note',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('campaignId', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['campaignId'], ['campaign.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('race_feats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('raceId', sa.Integer(), nullable=True),
    sa.Column('featId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['featId'], ['feat.id'], ),
    sa.ForeignKeyConstraint(['raceId'], ['race.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spellbookknowledge',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('spellbookId', sa.Integer(), nullable=True),
    sa.Column('spellId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['spellId'], ['spells.id'], ),
    sa.ForeignKeyConstraint(['spellbookId'], ['spellbook.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spellbookprepared',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('spellbookId', sa.Integer(), nullable=True),
    sa.Column('spellId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['spellId'], ['spells.id'], ),
    sa.ForeignKeyConstraint(['spellbookId'], ['spellbook.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spellcomponents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('spellId', sa.Integer(), nullable=True),
    sa.Column('itemId', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('goldValue', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['spellId'], ['spells.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('statsheet',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('spellbookId', sa.Integer(), nullable=True),
    sa.Column('inspiration', sa.Integer(), nullable=True),
    sa.Column('exp', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('health', sa.Integer(), nullable=True),
    sa.Column('strength', sa.Integer(), nullable=True),
    sa.Column('dexterity', sa.Integer(), nullable=True),
    sa.Column('constitution', sa.Integer(), nullable=True),
    sa.Column('intelligence', sa.Integer(), nullable=True),
    sa.Column('wisdom', sa.Integer(), nullable=True),
    sa.Column('charisma', sa.Integer(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['spellbookId'], ['spellbook.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('spellbookId')
    )
    op.create_table('subclass_feats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subclassId', sa.Integer(), nullable=True),
    sa.Column('featId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['featId'], ['feat.id'], ),
    sa.ForeignKeyConstraint(['subclassId'], ['subclass.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('roleId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['roleId'], ['role.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('statsheetid', sa.Integer(), nullable=True),
    sa.Column('raceId', sa.Integer(), nullable=True),
    sa.Column('classId', sa.Integer(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('speed', sa.Integer(), nullable=True),
    sa.Column('languages', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('campaignCompatability', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['classId'], ['class.id'], ),
    sa.ForeignKeyConstraint(['raceId'], ['race.id'], ),
    sa.ForeignKeyConstraint(['statsheetid'], ['statsheet.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('classId'),
    sa.UniqueConstraint('raceId'),
    sa.UniqueConstraint('statsheetid')
    )
    op.create_table('hitdice',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('statsheetId', sa.Integer(), nullable=True),
    sa.Column('d4', sa.Integer(), nullable=True),
    sa.Column('d6', sa.Integer(), nullable=True),
    sa.Column('d8', sa.Integer(), nullable=True),
    sa.Column('d10', sa.Integer(), nullable=True),
    sa.Column('d12', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['statsheetId'], ['statsheet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('statsheet_proficiencies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('statsheetId', sa.Integer(), nullable=True),
    sa.Column('proficiencyId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['proficiencyId'], ['proficiency.id'], ),
    sa.ForeignKeyConstraint(['statsheetId'], ['statsheet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('statsheet_savingthrows',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('statsheetId', sa.Integer(), nullable=True),
    sa.Column('savingThrowId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['savingThrowId'], ['savingthrow.id'], ),
    sa.ForeignKeyConstraint(['statsheetId'], ['statsheet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('statsheet_skills',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('statsheetId', sa.Integer(), nullable=True),
    sa.Column('skillId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['skillId'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['statsheetId'], ['statsheet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('campaign_characters',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('campaignId', sa.Integer(), nullable=True),
    sa.Column('characterId', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['campaignId'], ['campaign.id'], ),
    sa.ForeignKeyConstraint(['characterId'], ['character.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_description',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('characterId', sa.Integer(), nullable=True),
    sa.Column('age', sa.String(), nullable=True),
    sa.Column('height', sa.String(), nullable=True),
    sa.Column('weight', sa.String(), nullable=True),
    sa.Column('eyes', sa.String(), nullable=True),
    sa.Column('skin', sa.String(), nullable=True),
    sa.Column('hair', sa.String(), nullable=True),
    sa.Column('background', sa.Text(), nullable=True),
    sa.Column('appearance', sa.Text(), nullable=True),
    sa.Column('bonds', sa.Text(), nullable=True),
    sa.Column('ideals', sa.Text(), nullable=True),
    sa.Column('personality', sa.Text(), nullable=True),
    sa.Column('flaws', sa.Text(), nullable=True),
    sa.Column('religion', sa.Text(), nullable=True),
    sa.Column('backstory', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['characterId'], ['character.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('characterId')
    )
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('characterId', sa.Integer(), nullable=True),
    sa.Column('itemId', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['characterId'], ['character.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('characterId')
    )
    op.create_table('user_characters',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('characterId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['characterId'], ['character.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_characters')
    op.drop_table('inventory')
    op.drop_table('character_description')
    op.drop_table('campaign_characters')
    op.drop_table('statsheet_skills')
    op.drop_table('statsheet_savingthrows')
    op.drop_table('statsheet_proficiencies')
    op.drop_table('hitdice')
    op.drop_table('character')
    op.drop_table('user_role')
    op.drop_table('subclass_feats')
    op.drop_table('statsheet')
    op.drop_table('spellcomponents')
    op.drop_table('spellbookprepared')
    op.drop_table('spellbookknowledge')
    op.drop_table('race_feats')
    op.drop_table('note')
    op.drop_table('class_table')
    op.drop_table('class_subclasses')
    op.drop_table('class_feats')
    op.drop_table('cantripknowledge')
    op.drop_table('user')
    op.drop_table('subclass')
    op.drop_table('spells')
    op.drop_table('spellbook')
    op.drop_table('skill')
    op.drop_table('savingthrow')
    op.drop_table('role')
    op.drop_table('race')
    op.drop_table('proficiency')
    op.drop_table('items')
    op.drop_table('feat')
    op.drop_table('ext_content')
    op.drop_table('class')
    op.drop_table('campaign')
    # ### end Alembic commands ###
